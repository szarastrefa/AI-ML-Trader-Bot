version: '3.8'

services:
  db:
    image: postgres:15
    container_name: ai_trader_db
    environment:
      POSTGRES_DB: ai_trader
      POSTGRES_USER: trader
      POSTGRES_PASSWORD: trader_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trader_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U trader -d ai_trader"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ai_trader_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trader_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: ai_trader_backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://trader:trader_password@db:5432/ai_trader
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app:ro
      - backend_logs:/app/logs
    networks:
      - trader_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  celery_worker:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: ai_trader_celery
    environment:
      - DATABASE_URL=postgresql://trader:trader_password@db:5432/ai_trader
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    command: celery -A celery_app worker --loglevel=info
    depends_on:
      - backend
      - redis
    volumes:
      - ./backend:/app:ro
      - celery_logs:/app/logs
    networks:
      - trader_network

  celery_beat:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: ai_trader_celery_beat
    environment:
      - DATABASE_URL=postgresql://trader:trader_password@db:5432/ai_trader
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_BEAT_SCHEDULE_FILENAME=/tmp/celerybeat-schedule
      - PYTHONPATH=/app
    command: celery -A celery_app beat --loglevel=info --schedule=/tmp/celerybeat-schedule
    depends_on:
      - backend
      - redis
    volumes:
      - ./backend:/app:ro
      - beat_data:/tmp
      - celery_logs:/app/logs
    networks:
      - trader_network

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    container_name: ai_trader_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - trader_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  beat_data:
  backend_logs:
  celery_logs:

networks:
  trader_network:
    driver: bridge
